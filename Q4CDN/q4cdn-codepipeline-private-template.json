{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Creates CodeDeploy applications and deployment group, deploys via CodePipeline from S3 bucket",
  "Parameters": {
    "S3Bucket": {
      "Description": "Name of an existing S3 bucket that contains application packages",
      "Type": "String"
    }
  },
  "Resources": {
    "CodeDeployRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": { "Service": [ "codedeploy.amazonaws.com" ] },
              "Action": [ "sts:AssumeRole" ]
            }
          ]
        },
        "Path": "/"
      }
    },
    "CodeDeployRolePolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "Q4CDN-CodeDeploy-Service-Role",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "cloudformation:Describe*"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "autoscaling:CompleteLifecycleAction",
                "autoscaling:DeleteLifecycleHook",
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeLifecycleHooks",
                "autoscaling:PutLifecycleHook",
                "autoscaling:RecordLifecycleActionHeartbeat",
                "autoscaling:CreateAutoScalingGroup",
                "autoscaling:UpdateAutoScalingGroup",
                "autoscaling:EnableMetricsCollection",
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribePolicies",
                "autoscaling:DescribeScheduledActions",
                "autoscaling:DescribeNotificationConfigurations",
                "autoscaling:DescribeLifecycleHooks",
                "autoscaling:SuspendProcesses",
                "autoscaling:ResumeProcesses",
                "autoscaling:AttachLoadBalancers",
                "autoscaling:PutScalingPolicy",
                "autoscaling:PutScheduledUpdateGroupAction",
                "autoscaling:PutNotificationConfiguration",
                "autoscaling:PutLifecycleHook",
                "autoscaling:DescribeScalingActivities",
                "autoscaling:DeleteAutoScalingGroup",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:TerminateInstances",
                "tag:GetTags",
                "tag:GetResources",
                "sns:Publish",
                "cloudwatch:DescribeAlarms",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeInstanceHealth",
                "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                "elasticloadbalancing:DeregisterInstancesFromLoadBalancer"
              ],
              "Resource": "*"
            }
          ]
        },
        "Roles": [ { "Ref": "CodeDeployRole" } ]
      }
    },
    "CodeDeployApplication1": {
      "Type": "AWS::CodeDeploy::Application",
      "Properties": {
        "ApplicationName": "Q4CDNClientSSL"
      }
    },
    "CodeDeployDeploymentGroup1": {
      "Type": "AWS::CodeDeploy::DeploymentGroup",
      "Properties": {
        "DeploymentGroupName": "Q4CDN-Nginx",
        "ApplicationName": { "Ref": "CodeDeployApplication1" },
        "Ec2TagFilters": [
          {
            "Key": "Name",
            "Value": "Q4WEB-STAGE-ContentCache-1",
            "Type": "KEY_AND_VALUE"
          }
        ],
        "ServiceRoleArn": { "Fn::GetAtt": [ "CodeDeployRole", "Arn" ] }
      }
    }
  },
  "Outputs": {
  }
} 