{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template is intended to be installed into an existing VPC with two public subnets.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCID",
                        "PublicSubnetID",
                        "RDGWCIDR",
                        "ADDomain",
                        "ADDirectory",
                        "ADDNS"
                    ]
                },
              {
                "Label": {
                  "default": "Amazon EC2 Configuration"
                },
                "Parameters": [
                  "KeyPairName",
                  "RDGWInstanceType"
                ]
              },
              {
                "Label": {
                  "default": "SSL Certificate"
                },
                "Parameters": [
                  "S3BucketName",
                  "PFXSSLCert",
                  "PFXPassword",
                  "CertificateCN"
                ]
              }
            ],
            "ParameterLabels": {
                "DomainDNSName": {
                    "default": "Domain DNS Name"
                },
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "PublicSubnetID": {
                    "default": "Public Subnet ID"
                },
                "RDGWInstanceType": {
                    "default": "Remote Desktop Gateway Instance Type"
                },
                "RDGWCIDR": {
                    "default": "Allowed Remote Desktop Gateway External Access CIDR"
                },
                "VPCID": {
                    "default": "VPC ID"
                }
            }
        }
    },
    "Parameters": {
      "RDGWInstanceType": {
            "Description": "Amazon EC2 instance type for the first Remote Desktop Gateway instance",
            "Type": "String",
            "Default": "t2.medium",
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ]
        },
      "KeyPairName": {
        "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
        "Type": "AWS::EC2::KeyPair::KeyName"
      },
      "S3BucketName": {
        "Description": "The name of the S3 bucket where the SSL certificate file is stored",
        "Type": "String"
      },
      "PFXSSLCert": {
        "Description": "The name of the .PFX file in the S3 bucket",
        "Type": "String"
      },
      "PFXPassword": {
        "Description": "The password for the .PFX file",
        "Type": "String"
      },
      "CertificateCN": {
        "Description": "Certificate Common Name (e.g., rdpgw.domain.com)",
        "Type": "String"
      },

      "PublicSubnetID": {
            "Description": "ID of the public subnet that you want to provision the Remote Desktop Gateway into (e.g., subnet-a0246dcd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
      "RDGWCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Description": "Allowed CIDR Block for external access to the Remote Desktop Gateways",
            "Type": "String"
        },
      "VPCID": {
        "Description": "ID of the VPC (e.g., vpc-0343606e)",
        "Type": "AWS::EC2::VPC::Id"
      },
      "ADDomain": {
        "Description": "AD Domain Name for use with AWS",
        "Type": "String",
        "ConstraintDescription": "must be the a valid Domain value."
    },
      "ADDirectory": {
      "Description": "AD Directory ID for use with AWS",
      "Type": "String",
      "ConstraintDescription": "must be the a valid Domain ID value."
    },
      "ADDNS": {
      "Description": "Directory Services DNS IPs.",
      "Type": "CommaDelimitedList"
    }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "WS2012R2": "Windows_Server-2012-R2_RTM-English-64Bit-Base-2017.06.14"
            },
            "ap-northeast-1": {
                "WS2012R2": "ami-354d4552"
            },
            "ap-northeast-2": {
                "WS2012R2": "ami-d38659bd"
            },
            "ap-south-1": {
                "WS2012R2": "ami-65b6c90a"
            },
            "ap-southeast-1": {
                "WS2012R2": "ami-9ab230f9"
            },
            "ap-southeast-2": {
                "WS2012R2": "ami-f3203190"
            },
            "ca-central-1": {
                "WS2012R2": "ami-00e95664"
            },
            "eu-central-1": {
                "WS2012R2": "ami-ad3e9ac2"
            },
            "eu-west-1": {
                "WS2012R2": "ami-1e5d4378"
            },
            "eu-west-2": {
                "WS2012R2": "ami-ad5d4bc9"
            },
            "sa-east-1": {
                "WS2012R2": "ami-4f3f5423"
            },
            "us-east-1": {
                "WS2012R2": "ami-e196b0f7"
            },
            "us-east-2": {
                "WS2012R2": "ami-a4b395c1"
            },
            "us-west-1": {
                "WS2012R2": "ami-b4614cd4"
            },
            "us-west-2": {
                "WS2012R2": "ami-8d0c07f4"
            }
        }
    },
    "Resources": {
      "RDPGW01": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "ImageId": {
            "Fn::FindInMap": [
              "AWSAMIRegionMap",
              { "Ref": "AWS::Region" },
              "WS2012R2"
            ]
          },
          "InstanceType": { "Ref": "RDGWInstanceType" },
          "NetworkInterfaces": [
            {
              "NetworkInterfaceId": { "Ref": "NetworkInterface01" },
              "DeviceIndex": "0"
            }
          ],
          "BlockDeviceMappings": [
            {
              "DeviceName": "/dev/sda1",
              "Ebs": {
                "VolumeSize": "50"
              }
            }
          ],
          "IamInstanceProfile": { "Ref": "RDGWHostProfile" },
          "SsmAssociations": [
            {
              "DocumentName": { "Ref": "SSMDocument" }
            }
          ],
          "Tags": [
            {
              "Key": "Name",
              "Value": "Quant-Ops-RDPGW-RDPGW01"
            }
          ],
          "KeyName": { "Ref": "KeyPairName" },
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "",
                [
                  "<powershell>\n",
                  "Install-WindowsFeature RDS-Gateway,RSAT-RDS-Gateway,RSAT-ADDS,RSAT-DNS-Server\n",
                  "Read-S3Object -BucketName q4-quant-rdpgw -Key ", { "Ref": "PFXSSLCert" }," -File C:\\SSL\\sslcert.pfx \n",
                  "Import-PfxCertificate -FilePath C:\\SSL\\sslcert.pfx cert:\\localMachine\\my -Password (ConvertTo-SecureString -String '",
                  { "Ref": "PFXPassword" },
                  "' -Force -AsPlainText)\n",
                  "Import-Module RemoteDesktopServices\n",
                  "$GroupName='Administrators';$DomainNetBiosName='BUILTIN'\n",
                  "New-Item -path RDS:\\GatewayServer\\CAP -Name Default-CAP -UserGroups ", "\"$GroupName@$DomainNetBiosName\"", " -AuthMethod 1\n",
                  "New-Item -Path RDS:\\GatewayServer\\RAP -Name Default-RAP -UserGroups ", "\"$GroupName@$DomainNetBiosName\"", " -ComputerGroupType 2\n",
                  "Get-ChildItem cert:\\localmachine\\my | where-object ",
                  "{$_.Subject -eq 'CN=",
                  { "Ref": "CertificateCN" },
                  "'} | ForEach-Object ",
                  "{Set-Item -Path RDS:\\GatewayServer\\SSLCertificate\\Thumbprint -Value $_.Thumbprint}\n",
                  "Restart-Service tsgateway\n",
                  "Rename-Computer -NewName RDPGW01 -Force",
                  "\n",
                  "</powershell> \n"
                ]
              ]
            }
          }
        }
      },
      "SSMDocument": {
        "Type": "AWS::SSM::Document",
        "Properties": {
          "Content": {
          "schemaVersion": "1.2",
          "description": "Join instances to an AWS Directory Service domain.",
          "runtimeConfig": {
            "aws:domainJoin": {
              "properties": {
                "directoryId": { "Ref": "ADDirectory" },
                "directoryName": { "Ref": "ADDomain" },
                "dnsIpAddresses": { "Ref": "ADDNS" }
              }
            }
          }
        }
      }
    },
      "EIP01": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
      "RDGWHostRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": { "Service": [ "ec2.amazonaws.com" ] },
                "Action": [ "sts:AssumeRole" ]
              }
            ]
          },
          "Path": "/"
        }
      },  
      "InstanceRolePolicies": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
         "PolicyName": "RDPGW-Role",
         "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "cloudformation:Describe*"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "ssm:DescribeAssociation",
                "ssm:GetDocument",
                "ssm:ListAssociations",
                "ssm:CreateAssociation",
                "ssm:UpdateAssociationStatus",
                "ssm:UpdateInstanceInformation"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "ec2messages:AcknowledgeMessage",
                "ec2messages:DeleteMessage",
                "ec2messages:FailMessage",
                "ec2messages:GetEndpoint",
                "ec2messages:GetMessages",
                "ec2messages:SendReply"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "ec2:DescribeInstanceStatus"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "ds:CreateComputer",
                "ds:DescribeDirectories"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject",
                "s3:GetObject",
                "s3:AbortMultipartUpload",
                "s3:ListMultipartUploadParts",
                "s3:ListBucketMultipartUploads"
              ],
              "Resource": "*"
            }
          ]
        },
          "Roles": [
          {
            "Ref": "RDGWHostRole"
          }
        ]
      }
    },        
      "RDGWHostProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Roles": [
                    {
                        "Ref": "RDGWHostRole"
                    }
                ],
                "Path": "/"
            }
        },
      "RemoteDesktopGatewaySG": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Enable RDP access from the Internet",
          "VpcId": {
            "Ref": "VPCID"
          },
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": "3389",
              "ToPort": "3389",
              "CidrIp": {
                "Ref": "RDGWCIDR"
              }
            },
            {
              "IpProtocol": "tcp",
              "FromPort": "443",
              "ToPort": "443",
              "CidrIp": "0.0.0.0/0"
            },
            {
             "IpProtocol": "tcp",
              "FromPort": "135",
              "ToPort": "139",
              "CidrIp": "172.10.0.0/16"
            },
            {
              "IpProtocol": "tcp",
              "FromPort": "445",
              "ToPort": "445",
              "CidrIp": "172.10.0.0/16"
            },
            {
              "IpProtocol": "icmp",
              "FromPort": "-1",
              "ToPort": "-1",
              "CidrIp": {
                "Ref": "RDGWCIDR"
              }
            }
          ]
        }
      },
      "NetworkInterface01":{
        "Type" : "AWS::EC2::NetworkInterface",
        "Properties":{
          "SubnetId": { "Ref": "PublicSubnetID" },
          "GroupSet" : [ { "Ref" : "RemoteDesktopGatewaySG" } ]
        }
    },
      "AssociateExternalIP01" : {
         "Type" : "AWS::EC2::EIPAssociation",
         "Properties" : {
            "AllocationId" : { "Fn::GetAtt" : [ "EIP01", "AllocationId" ]},
            "NetworkInterfaceId" : { "Ref" : "NetworkInterface01" }
          }
      }      
    },
    "Outputs": {
        "EIP01": {
            "Description": "Elastic IP for RDGW",
            "Value": {
                "Ref": "EIP01"
            }
        },
        "RemoteDesktopGatewaySGID": {
            "Value": {
                "Ref": "RemoteDesktopGatewaySG"
            },
            "Description": "Remote Desktop Gateway Security Group ID"
        }
    }
}
